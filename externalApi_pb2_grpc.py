# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import externalApi_pb2 as externalApi__pb2


class apiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetHardwareValue = channel.unary_unary(
                '/api.api/GetHardwareValue',
                request_serializer=externalApi__pb2.HardwareRequest.SerializeToString,
                response_deserializer=externalApi__pb2.HardwareResponse.FromString,
                )
        self.UpdateParamValue = channel.unary_unary(
                '/api.api/UpdateParamValue',
                request_serializer=externalApi__pb2.UpdateRequest.SerializeToString,
                response_deserializer=externalApi__pb2.UpdateResponse.FromString,
                )
        self.Registration = channel.unary_unary(
                '/api.api/Registration',
                request_serializer=externalApi__pb2.RegistrationRequest.SerializeToString,
                response_deserializer=externalApi__pb2.RegistrationResponse.FromString,
                )
        self.RegistrationHardware = channel.unary_unary(
                '/api.api/RegistrationHardware',
                request_serializer=externalApi__pb2.RegistrationHardwareRequest.SerializeToString,
                response_deserializer=externalApi__pb2.RegistrationResponse.FromString,
                )
        self.GetHardwareId = channel.unary_unary(
                '/api.api/GetHardwareId',
                request_serializer=externalApi__pb2.HardwareIdRequest.SerializeToString,
                response_deserializer=externalApi__pb2.HardwereIdResponce.FromString,
                )
        self.GetParamId = channel.unary_unary(
                '/api.api/GetParamId',
                request_serializer=externalApi__pb2.ParamIdRequest.SerializeToString,
                response_deserializer=externalApi__pb2.ParamIdResponce.FromString,
                )
        self.RegistrationParams = channel.unary_unary(
                '/api.api/RegistrationParams',
                request_serializer=externalApi__pb2.RegParamsReq.SerializeToString,
                response_deserializer=externalApi__pb2.RegParamsResponce.FromString,
                )


class apiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetHardwareValue(self, request, context):
        """Метод позволяет получить список с параметрами 
        и их значением для необходимого оборудования.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateParamValue(self, request, context):
        """Метод позволяет менять параметры оборудования. 
        Неуказанные параметры остаются неизменными.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Registration(self, request, context):
        """Метод позволяет зарегистрировать нового пользователя.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegistrationHardware(self, request, context):
        """Метод позволяет зарегистрировать оборудование пользователя
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHardwareId(self, request, context):
        """Метод позволяет получить все id оборудования пользователя
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParamId(self, request, context):
        """Метод позволяет получить все id параметров выбранного оборудования
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegistrationParams(self, request, context):
        """Метод позволяет зарегистрировать оборудование пользователя
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_apiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetHardwareValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHardwareValue,
                    request_deserializer=externalApi__pb2.HardwareRequest.FromString,
                    response_serializer=externalApi__pb2.HardwareResponse.SerializeToString,
            ),
            'UpdateParamValue': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateParamValue,
                    request_deserializer=externalApi__pb2.UpdateRequest.FromString,
                    response_serializer=externalApi__pb2.UpdateResponse.SerializeToString,
            ),
            'Registration': grpc.unary_unary_rpc_method_handler(
                    servicer.Registration,
                    request_deserializer=externalApi__pb2.RegistrationRequest.FromString,
                    response_serializer=externalApi__pb2.RegistrationResponse.SerializeToString,
            ),
            'RegistrationHardware': grpc.unary_unary_rpc_method_handler(
                    servicer.RegistrationHardware,
                    request_deserializer=externalApi__pb2.RegistrationHardwareRequest.FromString,
                    response_serializer=externalApi__pb2.RegistrationResponse.SerializeToString,
            ),
            'GetHardwareId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHardwareId,
                    request_deserializer=externalApi__pb2.HardwareIdRequest.FromString,
                    response_serializer=externalApi__pb2.HardwereIdResponce.SerializeToString,
            ),
            'GetParamId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParamId,
                    request_deserializer=externalApi__pb2.ParamIdRequest.FromString,
                    response_serializer=externalApi__pb2.ParamIdResponce.SerializeToString,
            ),
            'RegistrationParams': grpc.unary_unary_rpc_method_handler(
                    servicer.RegistrationParams,
                    request_deserializer=externalApi__pb2.RegParamsReq.FromString,
                    response_serializer=externalApi__pb2.RegParamsResponce.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.api', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class api(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetHardwareValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.api/GetHardwareValue',
            externalApi__pb2.HardwareRequest.SerializeToString,
            externalApi__pb2.HardwareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateParamValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.api/UpdateParamValue',
            externalApi__pb2.UpdateRequest.SerializeToString,
            externalApi__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Registration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.api/Registration',
            externalApi__pb2.RegistrationRequest.SerializeToString,
            externalApi__pb2.RegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegistrationHardware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.api/RegistrationHardware',
            externalApi__pb2.RegistrationHardwareRequest.SerializeToString,
            externalApi__pb2.RegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHardwareId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.api/GetHardwareId',
            externalApi__pb2.HardwareIdRequest.SerializeToString,
            externalApi__pb2.HardwereIdResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParamId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.api/GetParamId',
            externalApi__pb2.ParamIdRequest.SerializeToString,
            externalApi__pb2.ParamIdResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegistrationParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.api/RegistrationParams',
            externalApi__pb2.RegParamsReq.SerializeToString,
            externalApi__pb2.RegParamsResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
