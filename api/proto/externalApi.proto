syntax = "proto3";


package api;

option go_package = "api/proto";

service api {
    //Метод позволяет получить список с параметрами 
    //и их значением для необходимого оборудования.
    rpc GetHardwareValue (HardwareRequest) returns (HardwareResponse){};

    //Метод позволяет менять параметры оборудования. 
    //Неуказанные параметры остаются неизменными.
    rpc UpdateParamValue(UpdateRequest) returns (UpdateResponse){};

    //Метод позволяет зарегистрировать нового пользователя.
    rpc Registration(RegistrationRequest) returns (RegistrationResponse){};

    //Метод позволяет зарегистрировать оборудование пользователя
    rpc RegistrationHardware(RegistrationHardwareRequest) returns (RegistrationResponse){};

    //Метод позволяет получить все id оборудования пользователя
    rpc GetHardwareId(HardwareIdRequest) returns (HardwereIdResponce){};

    //Метод позволяет получить все id параметров выбранного оборудования
    rpc GetParamId(ParamIdRequest) returns (ParamIdResponce){};
}

message HardwareRequest{
    int32 HarwareId = 1;
    string Token = 2;
}

message HardwareParams{
    string ParamName = 1;
    float ParamValue = 2;
}

message HardwareResponse {
    string MessageId = 1;
    repeated HardwareParams Params = 2; 
}

message UpdateParams{
    int32 ParamId = 1;
    float ParamValue = 2;
}

message UpdateRequest{
    int32 HardwareId = 1;
    string Token = 2;
    repeated UpdateParams Params = 3;
}

message UpdateResponse{
    string MessageId = 1;
    string ErrorCode = 2;
}

message RegistrationRequest{
    string Login = 1;
    string Password = 2;
}

message RegistrationResponse{
    string MessageId = 1;
    string ErrorCode = 2;
}

message RegistrationHardwareRequest{
    string HardName = 1;
    string Ip = 2;
    string Token = 3;
    repeated RegistrationHardwareParams Params = 4;
}

message HardwareIdRequest{
    string Token = 1;
}

message HardwereIdResponce{
    string MessageId = 1;
    repeated HardwareIdAll Rows = 2;
}

message HardwareIdAll{
    string HardwareName = 1;
    int32 HardwareId = 2;
}

message ParamIdRequest{
    string Token = 1;
    int32 HardwareId = 2;
}

message ParamIdResponce{
    string MessageId = 1;
    repeated ParamIdAll Rows = 2;
}

message ParamIdAll{
    string ParamName = 1;
    int32 ParamId = 2;
}